"tensor([1., 1.])","tensor([9.4107], dtype=torch.float64)"
"tensor([0.9158, 0.8074])","tensor([44.6005], dtype=torch.float64)"
"tensor([0.9785, 0.9250])","tensor([47.2557], dtype=torch.float64)"
"tensor([0.9831, 0.9878])","tensor([38.2018], dtype=torch.float64)"
"tensor([0.8732, 0.9957])","tensor([11.3573], dtype=torch.float64)"
"tensor([0.8687, 0.9940])","tensor([4.0899], dtype=torch.float64)"
"tensor([0.8498, 0.9893])","tensor([14.6150], dtype=torch.float64)"
"tensor([0.8583, 0.9929])","tensor([15.1902], dtype=torch.float64)"
"tensor([0.9073, 0.9920])","tensor([33.6523], dtype=torch.float64)"
"tensor([0.8459, 0.9221])","tensor([21.4496], dtype=torch.float64)"
"tensor([0.8154, 0.9271])","tensor([18.3611], dtype=torch.float64)"
"tensor([0.8984, 0.8960])","tensor([21.4264], dtype=torch.float64)"
"tensor([0.9983, 0.8119])","tensor([24.4178], dtype=torch.float64)"
"tensor([0.8624, 0.9398])","tensor([14.0916], dtype=torch.float64)"
"tensor([0.8288, 0.9765])","tensor([33.0843], dtype=torch.float64)"
"tensor([0.8700, 0.9086])","tensor([38.8249], dtype=torch.float64)"
"tensor([0.8777, 0.9875])","tensor([4.4028], dtype=torch.float64)"
"tensor([0.8712, 0.9762])","tensor([21.4649], dtype=torch.float64)"
"tensor([0.8518, 0.9999])","tensor([16.9496], dtype=torch.float64)"
"tensor([0.8683, 0.9867])","tensor([0.0750], dtype=torch.float64)"
"tensor([0.8432, 0.8620])","tensor([27.8926], dtype=torch.float64)"
"tensor([0.8651, 0.9711])","tensor([21.1843], dtype=torch.float64)"
"tensor([0.9442, 0.8420])","tensor([12.2549], dtype=torch.float64)"
"tensor([0.9366, 0.9548])","tensor([5.5915], dtype=torch.float64)"
"tensor([0.9747, 0.8468])","tensor([35.0352], dtype=torch.float64)"
